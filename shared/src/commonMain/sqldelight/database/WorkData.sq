CREATE TABLE WokingPlatform(
     workingPlatformId TEXT NOT NULL PRIMARY KEY ,
     workingZone TEXT ,
     platformName TEXT,
     isCustom INTEGER ,
     morningShifts TEXT NOT NULL ,
     morningShiftE TEXT NOT NULL,
     noonShiftS TEXT NOT NULL,
     noonShiftE TEXT NOT NULL,
     eveningShiftS TEXT NOT NULL,
     eveningShiftE TEXT NOT NULL,
     baseSalary  REAL  NOT NULL
);
CREATE TABLE LiveBuilderyState(
    id INTEGER NOT NULL DEFAULT 0 PRIMARY KEY,
    startTime TEXT NOT NULL,
    endTime  TEXT NOT NULL,
    totalTime REAL NOT NULL,
    workingPlatformId TEXT NOT NULL,
    baseWage REAL NOT NULL,
    extras REAL  NOT NULL,
    delivers INTEGER NOT NULL
);
CREATE TABLE WorkDeclare(
     workDeclareId TEXT NOT NULL DEFAULT '0' PRIMARY KEY,
     endDateTime TEXT NOT NULL,
     time REAL  NOT NULL,
     extraIncome REAL NOT NULL,
     baseIncome REAL NOT NULL ,
     deliveries INTEGER NOT NULL,
     month TEXT NOT NULL,
     workingPlatformId TEXT NOT NULL,
     FOREIGN KEY (workingPlatformId) REFERENCES WokingPlatform(workingPlatformId)
);
CREATE TABLE RemoteWorkDeclare(
    workingPlatform TEXT NOT NULL PRIMARY KEY,
    startTime REAL NOT NULL,
    endTime REAL NOT NULL,
    declariesCounter INTEGER NOT NULL
);
CREATE TABLE DataPerHour(
     id INTEGER NOT NULL  PRIMARY KEY AUTOINCREMENT,
     workDeclareId TEXT NOT NULL ,
     tip REAL NOT NULL,
     base REAL NOT NULL,
     deliveries REAL NOT NULL ,
     hour TEXT NOT NULL ,
     shiftId INTEGER NOT NULL,
     FOREIGN KEY (shiftId) REFERENCES Shift(shiftId),
     FOREIGN KEY (workDeclareId) REFERENCES WorkDeclare(workDeclareId)
);
CREATE TABLE RemoteDataPerHour(
     sumObjectId TEXT NOT NULL UNIQUE PRIMARY KEY,
     extra REAL NOT NULL,
     base REAL NOT NULL,
     deliveries REAL NOT NULL ,
     hour TEXT NOT NULL ,
     workingPlatform Text NOT NULL,
     workingZone Text NOT NULL,
     counter INTEGER NOT NULL,
     remoteWorkingPlatformId TEXT NOT NULL,
     FOREIGN KEY (remoteWorkingPlatformId) REFERENCES RemoteWorkingPlatform(workingPlatformId)
);
CREATE TABLE  Shift(
     shiftId INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
     shiftType INTEGER NOT NULL,
     workingPlatform TEXT NOT NULL ,
     startTime TEXT NOT NULL ,
     endTime TEXT NOT NULL ,
     time INTEGER NOT NULL,
     baseIncome REAL NOT NULL,
     extraIncome REAL NOT NULL,
     deliveries INTEGER NOT NULL,
     workDeclareId TEXT NOT NULL,
     FOREIGN KEY (workDeclareId) REFERENCES WorkDeclare(workDeclareId)
);
CREATE TABLE  LiveDeliveryItem(
     itemId INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
     time  TEXT NOT NULL,
     extra REAL NOT NULL,
     liveDeliveryState INTEGER NOT NULL
);
CREATE TABLE RemoteWorkingPlatform(
    workingPlatformId TEXT NOT NULL PRIMARY KEY ,
    workingZone TEXT ,
    platformName TEXT
);
CREATE TABLE RemoteSumObjectStatistics(
    workingPlatformId TEXT NOT NULL PRIMARY KEY ,
    monthDeclaries INTEGER NOT NULL,
    yearDeclaries INTEGER NOT NULL,
    totalYears INTEGER NOT NULL,
    totalMonths INTEGER NOT NULL
);
CREATE TABLE UserData(
    userName TEXT NOT NULL PRIMARY KEY,
    lastStatisticsToUpdate TEXT NOT NULL
);

insertRemoteSumObjectStatistics:
    INSERT OR REPLACE
    INTO RemoteSumObjectStatistics(
        workingPlatformId,
        monthDeclaries,
        yearDeclaries,
        totalYears,
        totalMonths
    )VALUES(?,?,?,?,?);

insertUserData:
    INSERT OR REPLACE
    INTO UserData(
        userName,
        lastStatisticsToUpdate
    )VALUES(?,?);

insertRemoteWorkingPlatform:
    INSERT OR REPLACE
    INTO RemoteWorkingPlatform(
        workingPlatformId,
        workingZone,
        platformName
    )VALUES(?,?,?);

insertWorkingPlatform:
    INSERT OR REPLACE
    INTO WokingPlatform(
         workingPlatformId ,
         workingZone,
         platformName,
         isCustom ,
         morningShifts,
         morningShiftE,
         noonShiftS,
         noonShiftE,
         eveningShiftS,
         eveningShiftE,
         baseSalary
    )VALUES(?,?,?,?,?,?,?,?,?,?,?);

getRemoteWorkingPlatformOptions1:
    SELECT * FROM RemoteWorkingPlatform  WHERE workingZone = "X" ORDER BY platformName DESC;

getRemoteWorkingPlatformOptions2:
    SELECT * FROM RemoteWorkingPlatform WHERE platformName = ? ORDER BY platformName DESC;

getLocalWorkingPlatformOptions1:
    SELECT * FROM WokingPlatform  WHERE(workingZone = "X" AND isCustom = 1) ORDER BY platformName DESC;

getLocalWorkingPlatformOptions2:
    SELECT * FROM WokingPlatform WHERE platformName = ? ORDER BY platformName DESC;

getWorkingPlatformById:
    SELECT * FROM WokingPlatform WHERE workingPlatformId = ?;

getRemoteWorkingPlatformById:
    SELECT * FROM RemoteWorkingPlatform WHERE workingPlatformId = ?;

getAllRemopteWorkingPlatformById:
    SELECT * FROM RemoteWorkingPlatform;


insertWorkDeclare:
    INSERT OR REPLACE
    INTO WorkDeclare(
        workDeclareId,
        endDateTime,
         time ,
          extraIncome,
          baseIncome  ,
          deliveries,
          month,
          workingPlatformId
    )
    VALUES(?, ?, ?,?,?,?,?,?);

    insertShift:
        INSERT OR REPLACE
        INTO Shift(
           shiftType,
           workingPlatform,
           startTime,
           endTime,
           time,
           baseIncome,
           extraIncome,
           deliveries,
           workDeclareId
        )
        VALUES( ?,?, ?,?,?,  ?,?,?,?);

    insertDataPerHour:
           INSERT OR REPLACE
           INTO DataPerHour(
                workDeclareId ,
                tip ,
                base,
                deliveries,
                hour ,
                shiftId
                )
           VALUES(  ?,  ?,?,?,?,?);

    insertLiveBuilderState:
            INSERT OR REPLACE
            INTO LiveBuilderyState(
                   id,
                   startTime,
                   endTime,
                   totalTime,
                   workingPlatformId,
                   baseWage,
                   extras,
                   delivers
            )
            VALUES(  0,?,  ?,?,?,?,?,?);

    insertLiveDeliveryItem:
                INSERT OR REPLACE
                INTO LiveDeliveryItem(
                     time ,
                     extra,
                     liveDeliveryState
                )
                VALUES(  ?,  ?,0);

    getLiveBuilderState:
        SELECT * FROM LiveBuilderyState WHERE id = 0;

    getLiveDeliveryItems:
         SELECT * FROM LiveDeliveryItem ORDER BY itemId DESC;

    deleteLiveDeliveryItems:
        DELETE FROM LiveDeliveryItem;

    deleteLiveBuilderState:
            DELETE FROM LiveBuilderyState;

    getLastShift:
         SELECT * FROM Shift ORDER BY shiftId DESC LIMIT 1;

    getLastWorkDeclare:
            SELECT * FROM WorkDeclare ORDER BY workDeclareId DESC LIMIT 1;

    getFirstWorkDeclare:
           SELECT * FROM WorkDeclare ORDER BY workDeclareId ASC LIMIT 1;

    getShiftsByWorkDeclareId:
        SELECT * FROM Shift WHERE workDeclareId = ?;

    getDataPerHourByShiftId:
            SELECT * FROM DataPerHour WHERE shiftId = ?;

    getDataPerHourByWorkDeclareId:
            SELECT * FROM DataPerHour WHERE workDeclareId = ?;

    getAllWorkDeclareData:
                SELECT * FROM WorkDeclare ORDER BY workDeclareId DESC;

    getAllWorkDeclareDataByPlatform:
                SELECT * FROM WorkDeclare WHERE workingPlatformId = ? ORDER BY workDeclareId DESC;
    getAllShiftDataByType:
            SELECT * FROM Shift WHERE shiftType=? ORDER BY shiftId DESC;
    getAllShiftDataByTypeAndWp:
            SELECT * FROM Shift WHERE shiftType=? AND workingPlatform=? ORDER BY shiftId DESC;
    getMonthData:
          SELECT * FROM WorkDeclare WHERE (month=:theMonth) ORDER BY workDeclareId DESC;

    getByPlatMonthData:
          SELECT * FROM WorkDeclare WHERE (workingPlatformId=:workingPlatform AND month=:theMonth) ORDER BY workDeclareId DESC;

    insertRemoteWorkDeclare:
    INSERT OR REPLACE
               INTO RemoteWorkDeclare(
                    workingPlatform ,
                    startTime,
                    endTime,
                    declariesCounter
               )
               VALUES(  ?,  ?,?,?);



    getRemoteWorkDeclareByWorkingPlatform:
        SELECT * FROM RemoteWorkDeclare WHERE workingPlatform = ?;


    insertRemoteDataPerHour:
    INSERT OR REPLACE
               INTO RemoteDataPerHour(
                     sumObjectId ,
                     extra ,
                     base,
                     deliveries,
                     hour ,
                     workingPlatform,
                     workingZone,
                     counter,
                     remoteWorkingPlatformId
               )
               VALUES(  ?,  ?,?,?,?,?,?,?,?);



    getRemoteDataPerHourBySumObjectId:
        SELECT * FROM RemoteDataPerHour WHERE sumObjectId = ?;

    getRemoteSumObjectStatisticByWorkingPlatform:
        SELECT * FROM RemoteSumObjectStatistics WHERE workingPlatformId = ?;

    getUserDataObj:
        SELECT * FROM UserData;